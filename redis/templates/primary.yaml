apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      instance: {{ .Values.name }}
      app: redis
      role: primary
  template:
    metadata:
      labels:
        instance: {{ .Values.name }}
        app: redis
        role: primary
    spec:
      containers:
        - name: redis
          image: "redis:{{- .Values.version }}"
          {{- if and (eq (.Values.authentication).require true) (gt (len (.Values.authentication).password) 0) }}
          command: [ "redis-server", "--requirepass", "{{ .Values.authentication.password }}" ]
          {{ end }}
          ports:
            - containerPort: 6379
              name: redis
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.name }}-redis
spec:
  selector:
    instance: {{ .Values.name }}
    app: redis
    role: primary
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.name }}-redis
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 4Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.name }}-redis-replica
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 4Gi
